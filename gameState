buildingIds = []


class Building:
    def __init__(self, name):
        self.name = name

    def createBuilding(self, buildingInfo):
        self.buildingInfo = buildingInfo
     
        newBuilding = (self.buildingInfo)
        return newBuilding



villageInfo = { "Type": "Village", "Name": "", "Cost (Population)": 100, "Population Growth": 1, "Building Slots": 1,}
village = Building(villageInfo)
townInfo = {"Type": "Town", "Name": "", "Cost: (Village)": 1, "Cost (Population)": 250, "Cost (Earth Cores)": 50, "Building Slots": 0}
town = Building(townInfo)
cityInfo = {"Type": "City", "Name": "", "Cost: (Town)": 1, "Cost (Population)": 500, "Cost (Earth Cores)": 100, "Cost (Air Cores)": 50, "Cost (Water Cores)": 50, "Building Slots": 0}
city = Building(cityInfo)

class Player:
    def __init__(self, name):
        self.name = name
  
    def createNewPlayer(self, playerInfo):
        self.playerInfo = playerInfo
    
        newPlayer = (self.playerInfo)
        return newPlayer
    # def editCoreTypes(self, coretype, amount)



    player.editCoreTypes()

        

playerInfo = {"owned_tiles" : {"1": brokefastMountains, "2": wanderingForest1}, "owned_champions": {"Champion1": theWinterKnight, "Champion2": archibaldTheBrave}, "Earth Cores" : 1000, "Air Cores" : 1000, "Water Cores" : 1000}
player = Player(playerInfo)





worldTileNames=["The Void", "Brokefast Mountains", "Wandering Forest (1)", "Eastern Highlands", "The Citadel", "Wandering Forest (2)", "Eastern Lowlands", "The Foglands"]
menuLabels=["Population:", "Pop Growth:", "Earth Cores:", "Air Cores:", "Water Cores:", "Earth Alignment:", "Air Alignment:", "Water Alignment:"]



def menu():
    """Prints the menu of options that the user can choose."""
    print()
    print("(0) Enter a new World Tile State")
    print("(1) Change Ownership of a World Tile")
    print("(2) Advance to the next World Tile State")
    print("(3) Print the Current World Tile State")
    print("(4) Change a Players Cores")
    print("(5) View or Edit a World Tile")
    print("(6) Add a new Player (not working)")
    print("(9) Break! (quit)")
    print()

def turnByTurnGrowth(wt_number):
    '''wt number and returns 
    a list of the new pop, EC, AC and WC amounts for that tile '''
    
    popG = wt_number[0]+wt_number[1]
    ECs = wt_number[2]+wt_number[5]
    ACs = wt_number[3]+wt_number[6]
    WCs = wt_number[4]+wt_number[7]
    return [popG, wt_number[1], ECs, ACs, WCs, wt_number[5],wt_number[6],wt_number[7]]

def boardTurn(L):
    '''takes the current worldTile state and returns the state of the board for the next turn'''
    L0 = []
    for i in range(len(L)):
        L0 += [turnByTurnGrowth(L[i])]
    return L0

allBuildings = ["Village", "Town", "City", "Fortress", "Citadel", "Palace", "Temple", "Lighthouse", "Watchtower", "Wall", "Training Ground", "Smith"]


brokefastMountains = {"Name": "The Brokefast Mountains", "Population" : 10000, "Pop Growth" : 2, "Earth Growth" : 2, "Air Growth" : 1, "Water Growth" : 0, "Buildings": [], "Available Building Slots": 4, "Upgradeable Buildings": {"Village Count": 0, "Town Count": 0, "City Count": 0 }, "World Tile Number": 1,  "Tile Ownership": True}
wanderingForest1 = {"Name": "The Northern Wandering Forest","Population" : 10, "Pop Growth" : 3, "Earth Growth" : 2, "Air Growth" : 0, "Water Growth" : 1, "Buildings": [], "Available Building Slots": 4, "Upgradeable Buildings": {"Village Count": 0, "Town Count": 0, "City Count": 0 }, "World Tile Number": 2, "Tile Ownership": True}
easternHighlands = {"Name": "The Eastern Highlands", "Population" : 10, "Pop Growth" : 1, "Earth Growth" : 1, "Air Growth" : 2, "Water Growth" : 0, "Buildings": [], "Available Building Slots": 4, "Upgradeable Buildings": {"Village Count": 0, "Town Count": 0, "City Count": 0 }, "World Tile Number": 3, "Tile Ownership": True}
theCitadel = {"Name": "The Citadel", "Population" : 10, "Pop Growth" : 4, "Earth Growth" : 1, "Air Growth" : 1, "Water Growth" : 1, "Buildings": [], "Available Building Slots": 4, "Upgradeable Buildings": {"Village Count": 0, "Town Count": 0, "City Count": 0 }, "World Tile Number": 4, "Tile Ownership": True}
wanderingForest2 = {"Name": "The Southern Wandering Forest", "Population" : 10, "Pop Growth" : 3, "Earth Growth" : 1, "Air Growth" : 0, "Water Growth" : 2, "Buildings": [], "Available Building Slots": 4, "Upgradeable Buildings": {"Village Count": 0, "Town Count": 0, "City Count": 0} , "World Tile Number": 5, "Tile Ownership": True}
easternLowlands = {"Name": "The Eastern Lowlands", "Population" : 10, "Pop Growth" : 1, "Earth Growth" : 0, "Air Growth" : 2, "Water Growth" : 1, "Buildings": [], "Available Building Slots": 4, "Upgradeable Buildings": {"Village Count": 0, "Town Count": 0, "City Count": 0 }, "World Tile Number": 6, "Tile Ownership": True}
theFoglands = {"Name": "The Foglands", "Population" : 10, "Pop Growth" : 2, "Earth Growth" : 0, "Air Growth" : 1, "Water Growth" : 2, "Buildings": [], "Available Building Slots": 4, "Upgradeable Buildings": {"Village Count": 0, "Town Count": 0, "City Count": 0 }, "World Tile Number": 7, "Tile Ownership": True}









theWinterKnight = {"Name": "The Winter Knight", "Affinity": "Water", "Earth Growth" : 0, "Air Growth" : 0, "Water Growth" : 1}
archibaldTheBrave = {"Name": "Archibald the Brave", "Affinity": "Earth", "Earth Growth" : 1, "Air Growth" : 0, "Water Growth" : 0}
theSunSummoner = {"Name": "The Sun Summoner", "Affinity": "Air", "Earth Growth" : 0, "Air Growth" : 1, "Water Growth" : 0}


World = {"1": brokefastMountains, "2": wanderingForest1, "3": easternHighlands, "4": theCitadel, "5": wanderingForest2, "6": easternLowlands, "7": theFoglands}
Champions = {"Champion1": theWinterKnight, "Champion2": archibaldTheBrave, "Champion3": theSunSummoner}

playerInfo = {"owned_tiles" : {"1": brokefastMountains, "2": wanderingForest1}, "owned_champions": {"Champion1": theWinterKnight, "Champion2": archibaldTheBrave}, "Earth Cores" : 1000, "Air Cores" : 1000, "Water Cores" : 1000}
player = Player(playerInfo)

player2Info = {"owned_tiles" : {}, "owned_champions": {"Champion3": theSunSummoner}, "Earth Cores" : 1000, "Air Cores" : 1000, "Water Cores" : 1000}
player2 = Player(player2Info)

#used the keys in the owned tiles list as keys in the world diction to get to brokefast mountain dict
#World{playerInfo{"owned_tiles"}[0]}

#print("god I hope this works " + str(World["1"]["Population"]))

# player = {"owned_tiles" : ["1", "2"], "owned_champions": ["Champion1", "Champion2"], "Earth Cores" : 1000, "Air Cores" : 1000, "Water Cores" : 1000}
# player2 = {"owned_tiles" : [], "owned_champions": [], "Earth Cores" : 0, "Air Cores" : 0, "Water Cores" : 0}

currentPlayers = []


def coreEdit():

    print("(1) Earth Cores")
    print("(2) Air Cores")
    print("(3) Water Cores")
    coreType = input("What Core Would you like to update? ")   
    balanceDifference = input('Enter the change in cores: ')
    
    
    print(coreType, balanceDifference)
    if coreType == '1': 
        if player["Earth Cores"] + int(balanceDifference) < 0:
            print("Not enough cores!")
        else:
            player["Earth Cores"] = player["Earth Cores"] + int(balanceDifference)
    if coreType == '2':    
        if player["Air Cores"] + int(balanceDifference) < 0:
            print("Not enough cores!")
        else:
            player["Air Cores"] = player["Air Cores"] + int(balanceDifference)
    if coreType == '3': 
        if player["Water Cores"] + int(balanceDifference) < 0:
            print("Not enough cores!")
        else:
            player["Water Cores"] = player["Water Cores"] + int(balanceDifference)
    else:
        print("Not sure what to do with that!")

    
def addTileOwnership():
    print()
    print("The Current Tile Ownership:")
    for i in World:
        if World[i]["Tile Ownership"] == True:
            for j in currentPlayers:
                for k in 
                if str(World[i]["World Tile Number"]) in j
                
            print("(", World[i]["World Tile Number"], ")", World[i]["Name"])
        if World[i]["Tile Ownership"] == False:
            print("(", World[i]["World Tile Number"], ",", World[i]["Name"])


            
    tile = input("Enter the tile number you wish to change")
    
    print("The Current owner of ")
    if World[tile]["Tile Ownership"] == True:
        pass
        
    
    
    

def editWorldTile():
    print()
    tile = input("Enter the desired World Tile number: ")
    print("You have seleted", World[tile]["Name"])
    print('(1) Edit population (Current:', World[tile]["Population"],')')
    print('(2) Edit population growth (Current:', World[tile]["Pop Growth"],')')
    print('(3) Purchase or upgrade buildings')
    print('(4) Edit World Tile Affinites')
    print('(5) View World Tiles Combat Board information')
    print('(9) Leave')
    choice = input("What do you wish to do? ")
    if choice == '1':
        difference = input("Enter change in population ")
        World[tile]["Population"] = World[tile]["Population"] + int(difference)
    if choice == '2':
        difference = input("Enter change in population growth ")
        World[tile]["Pop Growth"] = World[tile]["Pop Growth"] + int(difference)
    if choice == '3':
        print()
        print("Here are the current buildings in", World[tile]["Name"], ':')
        print()
        if len(World[tile]["Buildings"]) != 0:
            print(World[tile]["Buildings"])      
        print()
        print("-----------------------------------------------------------")
        print("Current Options")     
        print("(1) Purchase Village:   (Cost: 100 Population)")
        print("(2) Purchase Town:      (Cost: 250 Population, 100 Earth Cores)")
        print("(3) Purchase City:      (Cost: 500 Population, 1 Town)")
        print("(13) Exit")
        print()
        buildingChoice = input("What would you like to do? ")
        print()
        if World[tile]["Available Building Slots"] == 0:
            pass
        elif buildingChoice == '1':
            if World[tile]["Population"] >= villageInfo["Cost (Population)"]:
                newBuilding = village.createBuilding(villageInfo)
                newName = villageInfo["Type"] #+ str(indexCounter)
                World[tile]["Buildings"] += {newName: newBuilding}
                #indexCounter += 1
                World[tile]["Population"] = World[tile]["Population"] - villageInfo["Cost (Population)"]
                World[tile]["Available Building Slots"] = World[tile]["Available Building Slots"] - 1
                World[tile]["Pop Growth"] = World[tile]["Pop Growth"] + 1
                World[tile]["Upgradeable Buildings"]["Village Count"] +=1
        elif buildingChoice == '2':
            if World[tile]["Population"] >= townInfo["Cost (Population)"]:
                if player["Earth Cores"] >= townInfo["Cost (Earth Cores)"]:
                    if World[tile]["Upgradeable Buildings"]["Village Count"] >= 1:
                        newBuilding = town.createBuilding(townInfo)
                        newName = townInfo["Type"] #+ str(indexCounter)
                        World[tile]["Buildings"] += {newName: newBuilding}
                        World[tile]["Population"] = World[tile]["Population"] - townInfo["Cost (Population)"]
                        player["Earth Cores"] -= townInfo["Cost (Earth Cores)"]
                        World[tile]["Pop Growth"] = World[tile]["Pop Growth"] + 1
                        World[tile]["Upgradeable Buildings"]["Village Count"] -=1
                        World[tile]["Upgradeable Buildings"]["Town Count"] +=1

        elif buildingChoice == '3':
            if World[tile]["Population"] >= cityInfo["Cost (Population)"]:
                if player["Earth Cores"] >= cityInfo["Cost (Earth Cores)"]:
                    if player["Air Cores"] >= cityInfo["Cost (Air Cores)"]:
                        if player["Water Cores"] >= cityInfo["Cost (Water Cores)"]:
                            if World[tile]["Upgradeable Buildings"]["Town Count"] >= 1:
                                newBuilding = city.createBuilding(cityInfo)
                                newName = cityInfo["Type"] #+ str(indexCounter)
                                World[tile]["Buildings"] += {newName: newBuilding}
                                World[tile]["Population"] = World[tile]["Population"] - cityInfo["Cost (Population)"]
                                player["Earth Cores"] -= cityInfo["Cost (Earth Cores)"]
                                player["Air Cores"] -= cityInfo["Cost (Air Cores)"]
                                player["Water Cores"] -= cityInfo["Cost (Water Cores)"]
                                World[tile]["Pop Growth"] = World[tile]["Pop Growth"] + 1
                                World[tile]["Upgradeable Buildings"]["Town Count"] -=1
                                World[tile]["Upgradeable Buildings"]["City Count"] +=1
                    
        else:
            pass

    else:
        pass
        
        
        







    
        
       
            


    if choice == '4':
        print("(1)Change Earth Affinty (Current:", World[tile]["Earth Growth"],')')
        print("(2)Change Air Affinty (Current:", World[tile]["Air Growth"],')')
        print("(3)Change Water Affinty (Current:", World[tile]["Water Growth"],')')
        choice2 = input("What do you wish to do?")
        difference = input("Enter change in affinity")
        if choice2 == '1':
            World[tile]["Earth Growth"] = World[tile]["Earth Growth"] + int(difference)
        if choice2 == '2':
            World[tile]["Air Growth"] = World[tile]["Air Growth"] + int(difference)
        if choice2 == '3':
            World[tile]["Water Growth"] = World[tile]["Water Growth"] + int(difference)
        else:
            pass
    else: 
        pass


    
        





def turn():

    for i in World:  # advances population per turn 
        World[i]["Population"] = World[i]["Population"] + World[i]["Pop Growth"]
    if len(player["owned_tiles"]) > 0: 
        for i in player["owned_tiles"]: 
            player["Earth Cores"] = player["Earth Cores"] + World[i]["Earth Growth"]
        for i in player["owned_tiles"]: 
            player["Air Cores"] = player["Air Cores"] + World[i]["Air Growth"]
        for i in player["owned_tiles"]: 
            player["Water Cores"] = player["Water Cores"] + World[i]["Water Growth"]
    if len(player["owned_champions"]) > 0:
        for i in player["owned_champions"]: 
            player["Earth Cores"] = player["Earth Cores"] + Champions[i]["Earth Growth"]
        for i in player["owned_champions"]: 
            player["Air Cores"] = player["Air Cores"] + Champions[i]["Air Growth"]
        for i in player["owned_champions"]: 
            player["Water Cores"] = player["Water Cores"] + Champions[i]["Water Growth"]

    
    
        

















def main():
    """The main user-interaction loop."""
    secret_value = 4.2

   
    player1 = player.createNewPlayer(playerInfo)
    player2 = player.createNewPlayer(player2Info)

    currentPlayers = [player1, player2]
    

    turnNumber = 0
    worldTileNames=["The Void", "Brokefast Mountains", "Wandering Forest (1)", "Eastern Highlands", "The Citadel", "Wandering Forest (2)", "Eastern Lowlands", "The Foglands"]
    #print("population is: " + str(brokefastMountains["Population"]))
    #print("population is: " + str(brokefastMountains["Population"]))
    #print(brokefastMountains.keys())
    #print(brokefastMountains.values())
    # take a turn
   
    while True:       # The user-interaction loop
        print()
        print("---------------------------------------")
        print(player1)
        print()
        print("Current Turn Number:", turnNumber)
        print("Player 1 Stats")
        print("    Current Earth Cores:", player1["Earth Cores"])
        print("    Current Air Cores:", player1["Air Cores"])
        print("    Current Water Cores:", player1["Water Cores"])
        print()
        print("Player 2 Stats")
        print("    Current Earth Cores:", player2["Earth Cores"])
        print("    Current Air Cores:", player2["Air Cores"])
        print("    Current Water Cores:", player2["Water Cores"])
        print()
        for i in World:
            print(World[i]["Name"],': Population:', World[i]["Population"])

          
        menu()
        choice = input("Choose an option: ")

        #
        # "Clean and check" the user's input
        # 
        try:
            choice = int(choice)   # Make into an int!
        except:
            print("I didn't understand your input! Continuing...")
            continue

        #
        # Run the appropriate menu option
        #
        if choice == 9:    # We want to quit
            break          # Leaves the while loop altogether

        elif choice == 0:  # Enters a new World Tile State (DELETES CURRENT STATE!!!!)
            newL = input("Enter a new list: ")    # Enter _something_
            
            #
            # "Clean and check" the user's input
            #
            try: 
                newL = eval(newL) # eval runs Python's interpreter! Note: Danger!
                if type(newL) != type([]): 
                    print("That didn't seem like a list. Not changing L.")
                else: 
                    L = newL  # Here, things were OK, so let's set our list, L
            except:
                print("I didn't understand your input. Not changing L.")

        elif choice == 1: # Change the current turn number 
            newTurnNumber = input("Enter a new turn number: ")    # Enter _something_
            try: 
                newTurnNumber = eval(newTurnNumber) # eval runs Python's interpreter! Note: Danger!
                if type(newTurnNumber) != type(int): 
                    print("That didn't seem like a number. Not changing the turn number.")
                else: 
                    turnNumber = newTurnNumber  # Here, things were OK
            except:
                print("I didn't understand your input. Not changing the turn number.")


        elif choice == 2:  # Advance to the next world tile state
            addTileOwnership()
        

                       

        elif choice == 3:  # Prints the current World Tile State
            print()
            
                       

        elif choice == 4: #Edit a Players cores 

            coreEdit()
            print("Your  Core balance is")
            print("Earth Cores:", player["Earth Cores"])
            print("Air Cores:", player["Air Cores"])
            print("Water Cores:", player["Water Cores"])
            

           
        elif choice == 5: #Edit a World tiles population stats
            editWorldTile()
            

        
        else:
            print(choice, " ?      That's not on the menu!")

    print()
    print("See you yesterday!")






































































#  print("The Current World Tile State is:")
#         print()
#         for i in range(len(L)):
#             print(worldTileNames[i], ":", L[i])