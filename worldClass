


class World:

    def __init__(self):
        self.worldTileInfo = {"Name": "", "Population" : 0, "Pop Growth" : 2, "Earth Growth" : 0, "Air Growth" : 0, "Water Growth" : 0, "Buildings": {}, "Available Building Slots": 4, "Upgradeable Buildings": {"Village Count": 0, "Town Count": 0, "City Count": 0 }, "World Tile Number": 1,  "Tile Ownership": True}



    def editTileInfo(self, keyword, newValue):
        if type(keyword) == type(""):
            if type(newValue) == type(self.worldTileInfo[keyword]):
                self.worldTileInfo[keyword] += newValue

    def addNewStat(self, keyword, newValue):
        if type(keyword) == type(""):      #QUESTION FOR ELLIOT: HOW TO TEST TO MAKE SURE THE KEYWORD IS UNIQUE
            self.worldTileInfo.update({keyword: newValue})
newTile = World()
print(newTile)
print(newTile.worldTileInfo)


def createWorld(L):
    '''takes a list L and returns a dictionary world built from the list with the info attached to tile numbers'''
    newWorld = {}
    count = 1
    for i in range(len(L)):
        newWorldTile = World()
        newWorldTile.worldTileInfo["Name"] = L[i]
        newWorldTile.worldTileInfo["ID"] = "worldtile" + str(count)
        strcount = str(count)
        label = {strcount: newWorldTile.worldTileInfo}
        newWorld.update(label)

        count +=1
    return newWorld









        
worldTileNames=[ "Brokefast Mountains", "Wandering Forest (1)", "Eastern Highlands", "The Citadel", "Wandering Forest (2)", "Eastern Lowlands", "The Foglands"]

worldTileList = []
worldTileInfoList = {"Type": "World Tile", "Name": "", "ID": "worldTile", "Population": 10, "Population Growth": 2}

worldTile1 = World()
worldTile2 = World()



def main():
    print()
    print()
    value = createWorld(worldTileNames)
    print(value)



        
        


if __name__ == "__main__": 
    main()
