from telnetlib import NOP
from helper import * 

def import_example(): 
    statement = helper.help_me
    #print(statement)

worldTileNames=["The Void", "Brokefast Mountains", "Wandering Forest (1)", "Eastern Highlands", "The Citadel", "Wandering Forest (2)", "Eastern Lowlands", "The Foglands"]
menuLabels=["Population:", "Pop Growth:", "Earth Cores:", "Air Cores:", "Water Cores:", "Earth Alignment:", "Air Alignment:", "Water Alignment:"]



def menu():
    """Prints the menu of options that the user can choose."""
    print()
    print("(0) Enter a new World Tile State")
    print("(1) Enter a new turn number")
    print("(2) Advance to the next World Tile State")
    print("(3) Print the Current World Tile State")
    print("(4) Change a Players Cores")
    print("(5) View or Edit a World Tile")
    print("(9) Break! (quit)")
    print()

def turnByTurnGrowth(wt_number):
    '''wt number and returns 
    a list of the new pop, EC, AC and WC amounts for that tile '''
    
    popG = wt_number[0]+wt_number[1]
    ECs = wt_number[2]+wt_number[5]
    ACs = wt_number[3]+wt_number[6]
    WCs = wt_number[4]+wt_number[7]
    return [popG, wt_number[1], ECs, ACs, WCs, wt_number[5],wt_number[6],wt_number[7]]

def boardTurn(L):
    '''takes the current worldTile state and returns the state of the board for the next turn'''
    L0 = []
    for i in range(len(L)):
        L0 += [turnByTurnGrowth(L[i])]
    return L0

brokefastMountains = {"Name": "The Brokefast Mountains", "Population" : 10, "Pop Growth" : 2, "Earth Growth" : 2, "Air Growth" : 1, "Water Growth" : 0}
wanderingForest1 = {"Name": "The Northern Wandering Forest","Population" : 10, "Pop Growth" : 3, "Earth Growth" : 2, "Air Growth" : 0, "Water Growth" : 1}
easternHighlands = {"Name": "The Eastern Highlands", "Population" : 10, "Pop Growth" : 1, "Earth Growth" : 1, "Air Growth" : 2, "Water Growth" : 0}
theCitadel = {"Name": "The Citadel", "Population" : 10, "Pop Growth" : 4, "Earth Growth" : 1, "Air Growth" : 1, "Water Growth" : 1}
wanderingForest2 = {"Name": "The Southern Wandering Forest", "Population" : 10, "Pop Growth" : 3, "Earth Growth" : 1, "Air Growth" : 0, "Water Growth" : 2}
easternLowlands = {"Name": "The Eastern Lowlands", "Population" : 10, "Pop Growth" : 1, "Earth Growth" : 0, "Air Growth" : 2, "Water Growth" : 1}
theFoglands = {"Name": "The Foglands", "Population" : 10, "Pop Growth" : 2, "Earth Growth" : 0, "Air Growth" : 1, "Water Growth" : 2}



theWinterKnight = {"Name": "The Winter Knight", "Affinity": "Water", "Earth Growth" : 0, "Air Growth" : 0, "Water Growth" : 1}
archibaldTheBrave = {"Name": "Archibald the Brave", "Affinity": "Earth", "Earth Growth" : 1, "Air Growth" : 0, "Water Growth" : 0}
theSunSummoner = {"Name": "The Sun Summoner", "Affinity": "Air", "Earth Growth" : 0, "Air Growth" : 1, "Water Growth" : 0}


World = {"1": brokefastMountains, "2": wanderingForest1, "3": easternHighlands, "4": theCitadel, "5": wanderingForest2, "6": easternLowlands, "7": theFoglands}
Champions = {"Champion1": theWinterKnight, "Champion2": archibaldTheBrave, "Champion3": theSunSummoner}


#print("god I hope this works " + str(World["1"]["Population"]))

player = {"owned_tiles" : ["1", "2"], "owned_champions": ["Champion1", "Champion2"], "Earth Cores" : 0, "Air Cores" : 0, "Water Cores" : 0}
player2 = {"owned_tiles" : [], "owned_champions": [], "Earth Cores" : 0, "Air Cores" : 0, "Water Cores" : 0}




def coreEdit():

    print("(1) Earth Cores")
    print("(2) Air Cores")
    print("(3) Water Cores")
    coreType = input("What Core Would you like to update? ")   
    balanceDifference = input('Enter the change in cores: ')
    
    
    print(coreType, balanceDifference)
    if coreType == '1': 
        if player["Earth Cores"] + int(balanceDifference) < 0:
            print("Not enough cores!")
        else:
            player["Earth Cores"] = player["Earth Cores"] + int(balanceDifference)
    if coreType == '2':    
        if player["Air Cores"] + int(balanceDifference) < 0:
            print("Not enough cores!")
        else:
            player["Air Cores"] = player["Air Cores"] + int(balanceDifference)
    if coreType == '3': 
        if player["Water Cores"] + int(balanceDifference) < 0:
            print("Not enough cores!")
        else:
            player["Water Cores"] = player["Water Cores"] + int(balanceDifference)
    else:
        print("Not sure what to do with that!")


    

def editWorldTile():
    print()
    tile = input("Enter the World Tile Number ")
    print("You have seleted", World[tile]["Name"])
    print('(1) Edit population (Current:', World[tile]["Population"],')')
    print('(2) Edit population growth (Current:', World[tile]["Pop Growth"],')')
    print('(3) Edit World Tile Affinites')
    print('(9) Leave')
    choice = input("What do you wish to do? ")
    if choice == '1':
        difference = input("Enter change in population")
        World[tile]["Population"] = World[tile]["Population"] + int(difference)
    if choice == '2':
        difference = input("Enter change in population growth")
        World[tile]["Pop Growth"] = World[tile]["Pop Growth"] + int(difference)
    if choice == '3':
        print("(1)Change Earth Affinty (Current:", World[tile]["Earth Growth"],')')
        print("(2)Change Air Affinty (Current:", World[tile]["Air Growth"],')')
        print("(3)Change Water Affinty (Current:", World[tile]["Water Growth"],')')
        choice2 = input("What do you wish to do?")
        difference = input("Enter change in affinity")
        if choice2 == '1':
            World[tile]["Earth Growth"] = World[tile]["Earth Growth"] + int(difference)
        if choice2 == '2':
            World[tile]["Air Growth"] = World[tile]["Air Growth"] + int(difference)
        if choice2 == '3':
            World[tile]["Water Growth"] = World[tile]["Water Growth"] + int(difference)
        else:
            pass
    else: 
        pass


    
        





def turn():

    for i in World:  # advances population per turn 
        World[i]["Population"] = World[i]["Population"] + World[i]["Pop Growth"]
    if len(player["owned_tiles"]) > 0: 
        for i in player["owned_tiles"]: 
            player["Earth Cores"] = player["Earth Cores"] + World[i]["Earth Growth"]
        for i in player["owned_tiles"]: 
            player["Air Cores"] = player["Air Cores"] + World[i]["Air Growth"]
        for i in player["owned_tiles"]: 
            player["Water Cores"] = player["Water Cores"] + World[i]["Water Growth"]
    if len(player["owned_champions"]) > 0:
        for i in player["owned_champions"]: 
            player["Earth Cores"] = player["Earth Cores"] + Champions[i]["Earth Growth"]
        for i in player["owned_champions"]: 
            player["Air Cores"] = player["Air Cores"] + Champions[i]["Air Growth"]
        for i in player["owned_champions"]: 
            player["Water Cores"] = player["Water Cores"] + Champions[i]["Water Growth"]

    
    
        

















def main():
    """The main user-interaction loop."""
    secret_value = 4.2

   

    

    turnNumber = 0
    worldTileNames=["The Void", "Brokefast Mountains", "Wandering Forest (1)", "Eastern Highlands", "The Citadel", "Wandering Forest (2)", "Eastern Lowlands", "The Foglands"]
    #print("population is: " + str(brokefastMountains["Population"]))
    #print("population is: " + str(brokefastMountains["Population"]))
    #print(brokefastMountains.keys())
    #print(brokefastMountains.values())
    # take a turn
   
    while True:       # The user-interaction loop
        print()
        print("---------------------------------------")
        print()
        print("Current Turn Number:", turnNumber)
        print("Current Earth Cores:", player["Earth Cores"])
        print("Current Air Cores:", player["Air Cores"])
        print("Current Water Cores:", player["Water Cores"])
        print()
        for i in World:
            print(World[i]["Name"],': Population:', World[i]["Population"])












        # print()
        # print("The Current World Tile State is:")
        # print()
        # for i in range(len(L)):
        #     L1 = worldTileNames[i]
        #     L2 = L[i]
        #     print(L1)
        #     print(L2)
        
        # for i in range(len(L)):
        #     L1 = worldTileNames[i]
        #     L2 = L[i]
        #     print(L1)
        #     for j in range(len(L)):
        #         print(menuLabels[j], L2[j])
        #     print()
            
        # dict.keys() returns all the keys as a list of strings
        # dict.values() returns a list of all the values   
          
        menu()
        choice = input("Choose an option: ")

        #
        # "Clean and check" the user's input
        # 
        try:
            choice = int(choice)   # Make into an int!
        except:
            print("I didn't understand your input! Continuing...")
            continue

        #
        # Run the appropriate menu option
        #
        if choice == 9:    # We want to quit
            break          # Leaves the while loop altogether

        elif choice == 0:  # Enters a new World Tile State (DELETES CURRENT STATE!!!!)
            newL = input("Enter a new list: ")    # Enter _something_
            
            #
            # "Clean and check" the user's input
            #
            try: 
                newL = eval(newL) # eval runs Python's interpreter! Note: Danger!
                if type(newL) != type([]): 
                    print("That didn't seem like a list. Not changing L.")
                else: 
                    L = newL  # Here, things were OK, so let's set our list, L
            except:
                print("I didn't understand your input. Not changing L.")

        elif choice == 1: # Change the current turn number 
            newTurnNumber = input("Enter a new turn number: ")    # Enter _something_
            try: 
                newTurnNumber = eval(newTurnNumber) # eval runs Python's interpreter! Note: Danger!
                if type(newTurnNumber) != type(int): 
                    print("That didn't seem like a number. Not changing the turn number.")
                else: 
                    turnNumber = newTurnNumber  # Here, things were OK
            except:
                print("I didn't understand your input. Not changing the turn number.")


        elif choice == 2:  # Advance to the next world tile state
            turn()
            turnNumber +=1

                       

        elif choice == 3:  # Prints the current World Tile State
            print()
            
                       

        elif choice == 4: #Edit a Players cores 

            coreEdit()
            print("Your  Core balance is")
            print("Earth Cores:", player["Earth Cores"])
            print("Air Cores:", player["Air Cores"])
            print("Water Cores:", player["Water Cores"])
            

           
        elif choice == 5: #Edit a World tiles population stats
            editWorldTile()
            

        
        else:
            print(choice, " ?      That's not on the menu!")

    print()
    print("See you yesterday!")






































































#  print("The Current World Tile State is:")
#         print()
#         for i in range(len(L)):
#             print(worldTileNames[i], ":", L[i])